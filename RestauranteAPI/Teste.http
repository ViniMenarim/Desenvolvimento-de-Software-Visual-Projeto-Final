# Define a variável de host. 
@host = http://localhost:5219

### Teste: Verificar se a API está no ar
GET {{host}}/

### Teste: Cadastrar um novo cliente (Ana Silva)
POST {{host}}/api/cliente/cadastrar
Content-Type: application/json

{
    "nome": "Ana Silva",
    "telefone": "11988887777",
    "email": "ana.silva@email.com"
}

### Teste: Cadastrar um segundo cliente (Bruno Costa)
POST {{host}}/api/cliente/cadastrar
Content-Type: application/json

{
    "nome": "Bruno Costa",
    "telefone": "21955554444",
    "email": "bruno.costa@email.com"
}

### Teste: Tentar cadastrar cliente com email duplicado (DEVE FALHAR 409)
POST {{host}}/api/cliente/cadastrar
Content-Type: application/json

{
    "nome": "Ana Silva Duplicada",
    "telefone": "999999999",
    "email": "ana.silva@email.com"
}

### Teste: Listar todos os clientes
GET {{host}}/api/cliente/listar

### Teste: Buscar cliente pelo ID (ID = 1)
GET {{host}}/api/cliente/buscar/1

### Teste: Buscar cliente que não existe (DEVE FALHAR 404)
GET {{host}}/api/cliente/buscar/999

### Teste: Alterar dados do cliente (ID = 1)
PATCH {{host}}/api/cliente/alterar/1
Content-Type: application/json

{
    "nome": "Ana Silva Santos",
    "telefone": "11999999999",
    "email": "ana.santos@email.com"
}

### Teste: Remover cliente (ID = 2)
DELETE {{host}}/api/cliente/remover/2

### Teste: Cadastrar uma nova mesa (Mesa 1)
POST {{host}}/api/mesa/cadastrar
Content-Type: application/json

{
    "numero": 1,
    "capacidade": 4,
    "disponivel": true
}

### Teste: Cadastrar uma segunda mesa (Mesa 2)
POST {{host}}/api/mesa/cadastrar
Content-Type: application/json

{
    "numero": 2,
    "capacidade": 2,
    "disponivel": true
}

### Teste: Tentar cadastrar mesa com número duplicado (DEVE FALHAR 409)
POST {{host}}/api/mesa/cadastrar
Content-Type: application/json

{
    "numero": 1,
    "capacidade": 6
}

### Teste: Listar todas as mesas
GET {{host}}/api/mesa/listar

### Teste: Buscar mesa pelo ID (ID = 1)
GET {{host}}/api/mesa/buscar/1

### Teste: Alterar dados da mesa (ID = 2)
PATCH {{host}}/api/mesa/alterar/2
Content-Type: application/json

{
    "numero": 2,
    "capacidade": 3,
    "disponivel": false
}

### Teste: Cadastrar reserva (Cliente 1, Mesa 1)
POST {{host}}/api/reserva/cadastrar
Content-Type: application/json

{
    "dataHora": "2025-10-20T19:00:00",
    "clienteId": 1,
    "mesaId": 1
}

### Teste: Cadastrar reserva (Cliente 1, Mesa 2)
POST {{host}}/api/reserva/cadastrar
Content-Type: application/json

{
    "dataHora": "2025-10-20T19:00:00",
    "clienteId": 1,
    "mesaId": 2
}

### Teste: Tentar reservar MESA 1 no mesmo horário (DEVE FALHAR 409)
POST {{host}}/api/reserva/cadastrar
Content-Type: application/json

{
    "dataHora": "2025-10-20T19:00:00",
    "clienteId": 1, 
    "mesaId": 1
}

### Teste: Cadastrar reserva na MESA 1 em outro horário
POST {{host}}/api/reserva/cadastrar
Content-Type: application/json

{
    "dataHora": "2025-10-20T21:00:00",
    "clienteId": 1,
    "mesaId": 1
}

### Teste: Tentar reservar com ClienteID inexistente (DEVE FALHAR 404)
POST {{host}}/api/reserva/cadastrar
Content-Type: application/json

{
    "dataHora": "2025-10-21T19:00:00",
    "clienteId": 999,
    "mesaId": 1
}

### Teste: Tentar reservar com MesaID inexistente (DEVE FALHAR 404)
POST {{host}}/api/reserva/cadastrar
Content-Type: application/json

{
    "dataHora": "2025-10-21T19:00:00",
    "clienteId": 1,
    "mesaId": 999
}

### Teste: Listar todas as reservas
GET {{host}}/api/reserva/listar

### Teste: Buscar reserva pelo ID (ID = 1)
GET {{host}}/api/reserva/buscar/1

### Teste: Alterar reserva (ID = 1) para um novo horário livre
PATCH {{host}}/api/reserva/alterar/1
Content-Type: application/json

{
    "dataHora": "2025-10-20T19:30:00",
    "clienteId": 1,
    "mesaId": 1
}

### Teste: Tentar alterar reserva (ID = 1) para horário de outra reserva (ID = 3)
PATCH {{host}}/api/reserva/alterar/1
Content-Type: application/json

{
    "dataHora": "2025-10-20T21:00:00",
    "clienteId": 1,
    "mesaId": 1
}

### Teste: Remover reserva (ID = 2)
DELETE {{host}}/api/reserva/remover/2

### Teste: Limpar Reservas restantes (IDs 1 e 3)
DELETE {{host}}/api/reserva/remover/1
###
DELETE {{host}}/api/reserva/remover/3

### Teste: Limpar Mesas restantes (IDs 1 e 2)
DELETE {{host}}/api/mesa/remover/1
###
DELETE {{host}}/api/mesa/remover/2

### Teste: Limpar Cliente restante (ID 1)
DELETE {{host}}/api/cliente/remover/1